"""
题目描述:
在系统、网络均正常的情况下组织核酸采样员和志愿者对人群进行核酸检测筛查。每名采样员的效率不同，采样效率为N人/时。由于外界变化，
采样员的效率会以M人/小时为粒度发生变化，M为采样效率浮动粒度，M=N*10%，输入保证N*10%的结果数。
采样员效率浮动规则:采样员需要一名志愿者协助组织才能发挥正常效率，
在此基础上，每增加一名志愿者，效率提升1M多提升3M;如果没有志愿者协助组织，效率下降2M。
怎么安排速度最快?求总最快检测效率(总检查效率为各采样人员效率值相加)。

输入描述:
第一行:第一个值，采样员人数，取值范围[1.100];第二个值，志愿者人数，取值范围[1.5001:
第二行:各采样员基准效率值(单位人/小时)，取值范围[60.600]，保证序列中每项值计算10%为整数输出描述:
第一行:总最快检测效率(单位人/小时)补充说明:
输入需要保证采样员基准效率值序列的每个值*10%为整数收起示例1
示例输入
2 2
200 200
输出
400
"""
p1,p2 = list(map(int,input().split()))
xl = list(map(int,input().split()))

#每个人最多三个志愿者， 最少0个志愿者
# 每个核酸检测人员人数基础是0.8n, 增加第一个检测员加0.2n , 第二个0.1n, 第三个0.1n ,第四个0.1n
# 算出每个核酸人员增加一个人增加的效率，
# 每增加一个志愿者，取最大能增加的检测人员
res = 0

#默认情况大家都没有志愿者
for i in xl:
    res += i * 0.8

#最多四个志愿者时的每增加一个志愿者数值的效率
alxl = []
for i in range(len(xl)):
    alxl.append(0.2 * xl[i])
    alxl.append(0.1 * xl[i])
    alxl.append(0.1 * xl[i])
    alxl.append(0.1 * xl[i])
alxl = sorted(alxl,reverse=True)
print(alxl)
# 按照志愿者的数量，取最大的几个效率
for i in range(p2):
    res += alxl[i]

print(res)
